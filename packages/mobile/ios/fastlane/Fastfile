# This file contains the fastlane.tools configuration
# You can find the documentation at https://docs.fastlane.tools
#
# For a list of all available actions, check out
#
#     https://docs.fastlane.tools/actions
#
# For a list of all available plugins, check out
#
#     https://docs.fastlane.tools/plugins/available-plugins
#

# Uncomment the line if you want fastlane to automatically update itself
# update_fastlane

default_platform(:ios)
api_key = app_store_connect_api_key(
  key_id: ENV["APP_STORE_CONNECT_API_KEY_KEY_ID"],
  issuer_id: ENV["APP_STORE_CONNECT_API_KEY_ISSUER_ID"],
  key_content: ENV["APP_STORE_CONNECT_API_KEY_KEY"],
  duration: ENV["APP_STORE_CONNECT_API_KEY_DURATION"], # optional (maximum 1200)
  in_house: ENV["APP_STORE_CONNECT_API_KEY_IN_HOUSE"] # optional but may be required if using match/sigh
)


platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :test do
    build_number_testflight = latest_testflight_build_number(
      app_identifier: ENV["APP_IDENTIFIER"],
      api_key: api_key,
    )
    build_number_xcodeproj = get_build_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    version_testflight = lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION]
    version_xcodeproj = get_version_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    if Gem::Version.new(version_xcodeproj) < Gem::Version.new(version_testflight)
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_testflight+1}")
      increment_version_number_in_xcodeproj(
        version_number: version_testflight # Set a specific version number
      )
      # discord_notifier(
      #     webhook_url: "https://discord.com/api/webhooks/1111240493888720898/P5NGMukdguh3nuXf9Cqrs7YKoYz_fjUnhQlvdi1MFjnOKXf2FmMN5ms5L5_5a67KR5I_",
      #     title: "IOS 1 trong FASTLANE - #{version_testflight} (#{build_number_testflight+1})",
      #     description: "
      #     Congratulations. You have successfully deployed OWallet app to TestFlight :thumbsup::skin-tone-4: :thumbsup::skin-tone-4: :thumbsup::skin-tone-4:",
      #     success: true
      # )
    elsif Gem::Version.new(version_xcodeproj) == Gem::Version.new(version_testflight) && build_number_xcodeproj.to_i <= build_number_testflight
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_testflight + 1}")
      # discord_notifier(
      #   webhook_url: "https://discord.com/api/webhooks/1111240493888720898/P5NGMukdguh3nuXf9Cqrs7YKoYz_fjUnhQlvdi1MFjnOKXf2FmMN5ms5L5_5a67KR5I_",
      #   title: "IOS 2 trong FASTLANE - #{version_xcodeproj} (#{build_number_testflight + 1})",
      #   description: "
      #   Congratulations. You have successfully deployed OWallet app to TestFlight :thumbsup::skin-tone-4: :thumbsup::skin-tone-4: :thumbsup::skin-tone-4:",
      #   success: true
      # )
    elsif Gem::Version.new(version_xcodeproj) > Gem::Version.new(version_testflight)
      increment_version_number_in_xcodeproj(
        version_number: version_xcodeproj # Set a specific version number
      )
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_xcodeproj}")
      # discord_notifier(
      #   webhook_url: "https://discord.com/api/webhooks/1111240493888720898/P5NGMukdguh3nuXf9Cqrs7YKoYz_fjUnhQlvdi1MFjnOKXf2FmMN5ms5L5_5a67KR5I_",
      #   title: "IOS 3 FASTLANE - #{version_xcodeproj} (#{build_number_xcodeproj})",
      #   description: "
      #   Congratulations. You have successfully deployed OWallet app to TestFlight :thumbsup::skin-tone-4: :thumbsup::skin-tone-4: :thumbsup::skin-tone-4:",
      #   success: true
      # )
    end
    build_number_xcodeproj = get_build_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    version_xcodeproj = get_version_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    # discord_notifier(
    #   webhook_url: "https://discord.com/api/webhooks/1111240493888720898/P5NGMukdguh3nuXf9Cqrs7YKoYz_fjUnhQlvdi1MFjnOKXf2FmMN5ms5L5_5a67KR5I_",
    #   title: "IOS final FASTLANE - #{version_xcodeproj} (#{build_number_xcodeproj})",
    #   description: "
    #   Congratulations. You have successfully deployed OWallet app to TestFlight :thumbsup::skin-tone-4: :thumbsup::skin-tone-4: :thumbsup::skin-tone-4:",
    #   success: true
    # )
  end
end

platform :ios do
  desc "Push a new beta build to TestFlight"
  lane :release do 
    create_keychain(
      name: ENV["KEYCHAIN_NAME"],
      password: ENV["KEYCHAIN_PASSWORD"],
      default_keychain: true,
      unlock: true,
      timeout: 3600,
      lock_when_sleeps: false
    )
    if ENV["MATCH_GIT_BASIC_AUTHORIZATION"]
      match(
        storage_mode:'git',
        app_identifier: ENV["APP_IDENTIFIER"],
        api_key: api_key,
        username:ENV["APPLE_ID"],
        type: "appstore",
        team_id: ENV["TEAM_ID"],
        git_url: ENV["MATCH_GIT_URL"],
        keychain_name: ENV["KEYCHAIN_NAME"],
        keychain_password: ENV["KEYCHAIN_PASSWORD"],
        git_basic_authorization: ENV["MATCH_GIT_BASIC_AUTHORIZATION"],
        readonly: true
      )
    else
      match(
        storage_mode:'git',
        app_identifier: ENV["APP_IDENTIFIER"],
        api_key: api_key,
        username:ENV["APPLE_ID"],
        type: "appstore",
        team_id: ENV["TEAM_ID"],
        git_url: ENV["MATCH_GIT_URL"],
        keychain_name: ENV["KEYCHAIN_NAME"],
        keychain_password: ENV["KEYCHAIN_PASSWORD"],
        readonly: true
      )
    end
    build_number_testflight = latest_testflight_build_number(
      app_identifier: ENV["APP_IDENTIFIER"],
      api_key: api_key,
    )
    build_number_xcodeproj = get_build_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    version_testflight = lane_context[SharedValues::LATEST_TESTFLIGHT_VERSION]
    version_xcodeproj = get_version_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    if Gem::Version.new(version_xcodeproj) < Gem::Version.new(version_testflight)
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_testflight+1}")
      increment_version_number_in_xcodeproj(
        version_number: version_testflight # Set a specific version number
      )
    elsif Gem::Version.new(version_xcodeproj) == Gem::Version.new(version_testflight) && build_number_xcodeproj.to_i <= build_number_testflight
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_testflight + 1}")
    elsif Gem::Version.new(version_xcodeproj) > Gem::Version.new(version_testflight)
      increment_version_number_in_xcodeproj(
        version_number: version_xcodeproj # Set a specific version number
      )
      increment_build_number_in_xcodeproj(xcodeproj: "mobile.xcodeproj", build_number: "#{build_number_xcodeproj}")
    end
    build_number_xcodeproj = get_build_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    version_xcodeproj = get_version_number_from_xcodeproj(xcodeproj: "mobile.xcodeproj")
    app_identifier = CredentialsManager::AppfileConfig.try_fetch_value(:app_identifier)
    mapping = Actions.lane_context[
      SharedValues::MATCH_PROVISIONING_PROFILE_MAPPING
    ]
    update_code_signing_settings(
      use_automatic_signing: false,
      profile_name: mapping[app_identifier],
      code_sign_identity:'iPhone Distribution'
    )
    sentry_upload_dif(
      auth_token: ENV["SENTRY_TOKEN"],
      org_slug: 'oraichain',
      project_slug: 'owallet-mobile',
      include_sources: true, # Optional. For source context.
    )
    build_app(workspace: "mobile.xcworkspace", scheme: "mobile")
    pilot(api_key: api_key)
    # discord_notifier(
    #   webhook_url: "https://discord.com/api/webhooks/#{ENV["DISCORD_HOOK_ID"]}/#{ENV["DISCORD_HOOK_TOKEN"]}",
    #   title: "IOS FASTLANE - #{version_xcodeproj} (#{build_number_xcodeproj})",
    #   description: "
    #   Congratulations. You have successfully deployed OWallet app to TestFlight :thumbsup::skin-tone-4: :thumbsup::skin-tone-4: :thumbsup::skin-tone-4:",
    #   success: true
    # )
  end
end
